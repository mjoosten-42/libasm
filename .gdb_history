p *(char*)$rdi
printf "%s" $rdi
printf "%s", $rdi
printf "%s\n", $rdi
b ft_atoi_base
c
d 1
c
b strchr
c
printf "%s\n", $rdi
c
b ft_atoi_base
r
layout asm
ni
p $r14
ni
p $rax
ni
b ft_atoi_base.base
r
layout asm
ni
p $r15
p $r14
p $r13
p $12
p $r12
p/x $r12
ni
p $rax
p $12
p $r12
ni
p $r1
p $r15
p $t14
p $r14
p $r14d
r
ni
p $rdi
p $esi
p (char)$esi
ni
p $rax
p $r12
b ft_atoi_base.baes
b ft_atoi_base.base
r
layout asm
ni
p $r14
layout asm
b ft_list_push_front
r
p $rdi
p/x $rdi
p/x *$rdi
p/x $rsi
ni
p/x $rax
p/x *$rax
p/x *($rax+8)
ni
p $rbx
p/x $rbx
p $rax
p/x $rax
p/x *$rbx
ni
p $rax
p/x $rax
p/x *$rax
p/x *($rax+8)
ni
c
ni
p $rax
p/x $rax
p/x *$rbx
ni
p $rcx
p/x $rcx
p/x *$rax
ni
ni
layout asm
r
layout asm
./a
r
r
layout asm
r
bt
b ft_create_elem
r
ni
p $rdi
c
ni
p $rdi
c
ni
p $rdi
ni
c
p $rdi
ni
p $rdi
c
d 1
c
bt
p $rsp
b 82
r
s
s
s
s
s
s
b 102
c
si
s
layout asm
r
b ft_remove_list_if
b ft_list_remove_if
layout asm
r
ni
p $rdi
p/x $rdi
ni
p/x $rsi
ni
p $r13
p/x $r13
b ft_list_remove_if
r
layout asm
c
info local
info reg
layout asm
r
p $rdi
p/x $rdi
p/x $r15
p $rdi
p/x $rdi
p $r15
p/x $r15
p/x *$r15
p/x *($r15+8)
p $rbx
p/x $rbx
p $rdi
layout asm
layout asm
r
b ft_list_remove_if
r
ni
p/x $rdi
b ft_list_remove_if
layout asm
r
ni
p $r14
p/x $r14
p *$rdi
ni
p $r14
p/x $r14
ni
p $rdi
p $rsi
s
ni
p $eax
ni
p/x $r14
p/x *($r14+8)
ni
p/x $rdi
ni
p/x $rdi
p $r15
ni
p/x $rsi
p/x *$rsi
p/x *($rsi+8)
p/x *(*$rsi + 8)
p $rsp
p *($rsp+8)
p *(char*)($rsp+8)
p/x *(long*)($rsp+8)
ni
p $r14
p/x $rdi
p/x *$rdi
ni
s
b ft_list_remove_if
layout asm
b remove
r
c
ni
p/x $rdx
ni
b remove
layout asm
r
bt
b remove
layout asm
r
b remove
layout asm
r
ni
p/x $rdx
p/x $rdi
ni
$rsp+8
set $rsp+8
$rsp=$rsp+8
set $rsp=$rsp+8
layout asm
b remove
layout asm
r
p/x $rdx
b ft_list_remove_if
layout asm
r
p/4w $rsp
p/w $rsp
p $rsp
p/x rsp
p $rsp
x/4 $rsp
x/4q $rsp
x/q $rsp
x/4x $rsp
info frame
x/4xg $rsp
x/4g $rsp
x/4g $sp
